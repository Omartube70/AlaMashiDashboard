@page "/ResetPassword"
@inject ApiService ApiService
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.Components
@using MudBlazor

<PageTitle>Reset Password</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraSmall" Class="mt-16">

    <div class="login-header">
        <h1 class="login-title">🔓 Reset Password</h1>
        <p class="login-subtitle">Enter a new password for your account.</p>
    </div>

    <MudCard Elevation="3" Class="login-card">
        <MudCardContent>
            <MudForm @ref="_form">
                <MudTextField @bind-Value="_password"
                              Label="New Password"
                              Variant="Variant.Outlined"
                              InputType="InputType.Password"
                              FullWidth="true"
                              Immediate="true"
                              Required="true"
                              RequiredError="Password is required"
                              Validation="@(InputValidator.ValidatePassword)" />

                @if (!string.IsNullOrEmpty(_message))
                {
                    <MudText Color="@_messageColor" Class="mt-2">@_message</MudText>
                }
            </MudForm>
        </MudCardContent>

        <MudCardActions Class="justify-between">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleReset" Class="px-6">
                Reset Password
            </MudButton>

            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(() => NavManager.NavigateTo("/"))" Class="px-6">
                Back to Home
            </MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

<style>
    .login-header {
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .login-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: #2563eb;
        margin-bottom: 0.25rem;
    }

    .login-subtitle {
        font-size: 0.95rem;
        color: #6b7280;
    }

    .login-card {
        border-radius: 10px;
        padding: 1.5rem;
        background-color: #ffffff;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
    }

    ::deep .mud-input-root {
        border-radius: 6px;
    }

    ::deep .mud-button {
        border-radius: 6px;
        font-weight: 600;
    }

        ::deep .mud-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 10px rgba(37, 99, 235, 0.3);
        }
</style>

@code {
    [Parameter][SupplyParameterFromQuery] public string? Email { get; set; }
    private string _password = "";
    private string _message = "";
    private Color _messageColor = Color.Error;
    private MudForm? _form;

    private async Task HandleReset()
    {
        _message = "";
        if (_form == null || string.IsNullOrEmpty(Email)) 
        return;

        await _form.Validate();
        if (!_form.IsValid) 
        return;

        bool success = await ApiService.ResetPasswordAsync(Email, _password);

        if (success)
        {
            _message = "Password reset successfully!";
            _messageColor = Color.Success;
            await Task.Delay(1500);
            NavManager.NavigateTo("/login");
        }
        else
        {
            _message = "Failed to reset password. Please try again.";
            _messageColor = Color.Error;
        }
    }
}
