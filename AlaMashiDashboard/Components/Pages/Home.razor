@page "/"
@inject IHttpClientFactory HttpClientFactory
@using System.Net.Http.Json
@using System.Text.Json.Serialization
@using System.Net.Http.Headers
@inject TokenManagerService TokenManager
@inject NavigationManager NavManager
@inject IConfiguration Config
@inject ApiService ApiService

<PageTitle>Dashboard</PageTitle>

<!-- Page Header -->
<div class="mb-4">
    <MudText Typo="Typo.h4" Class="font-weight-bold mb-2">📊 Dashboard Overview</MudText>
    <MudText Typo="Typo.body2" Color="Color.Secondary">Welcome back, @_userName! Here's what's happening today.</MudText>
</div>

<!-- Stats Cards Grid -->
<MudGrid Spacing="3" Class="mb-4">
    <!-- Total Users Card -->
    <MudItem xs="12" sm="6" lg="3">
        <MudCard Elevation="2" Class="stat-card">
            <MudCardContent Class="pa-4">
                <div class="d-flex justify-space-between align-center mb-2">
                    <MudIcon Icon="@Icons.Material.Filled.People"
                             Size="Size.Large"
                             Color="Color.Primary" />
                    @if (!isLoading && summaryData != null)
                    {
                        <MudChip Size="Size.Small" Color="Color.Success">+12%</MudChip>
                    }
                </div>
                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-1">Total Users</MudText>
                @if (isLoading)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Text" Width="60%" Height="40px" />
                }
                else if (summaryData != null)
                {
                    <MudText Typo="Typo.h4" Class="font-weight-bold">@summaryData.TotalUsers.ToString("N0")</MudText>
                }
                else
                {
                    <MudText Color="Color.Error" Typo="Typo.caption">Failed to load</MudText>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Total Products Card -->
    <MudItem xs="12" sm="6" lg="3">
        <MudCard Elevation="2" Class="stat-card">
            <MudCardContent Class="pa-4">
                <div class="d-flex justify-space-between align-center mb-2">
                    <MudIcon Icon="@Icons.Material.Filled.Inventory"
                             Size="Size.Large"
                             Color="Color.Info" />
                    @if (!isLoading && summaryData != null)
                    {
                        <MudChip Size="Size.Small" Color="Color.Success">+8%</MudChip>
                    }
                </div>
                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-1">Total Products</MudText>
                @if (isLoading)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Text" Width="60%" Height="40px" />
                }
                else if (summaryData != null)
                {
                    <MudText Typo="Typo.h4" Class="font-weight-bold">@summaryData.TotalProducts.ToString("N0")</MudText>
                }
                else
                {
                    <MudText Color="Color.Error" Typo="Typo.caption">Failed to load</MudText>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Total Categories Card -->
    <MudItem xs="12" sm="6" lg="3">
        <MudCard Elevation="2" Class="stat-card">
            <MudCardContent Class="pa-4">
                <div class="d-flex justify-space-between align-center mb-2">
                    <MudIcon Icon="@Icons.Material.Filled.Category"
                             Size="Size.Large"
                             Color="Color.Warning" />
                    @if (!isLoading && summaryData != null)
                    {
                        <MudChip Size="Size.Small" Color="Color.Info">Stable</MudChip>
                    }
                </div>
                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-1">Total Categories</MudText>
                @if (isLoading)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Text" Width="60%" Height="40px" />
                }
                else if (summaryData != null)
                {
                    <MudText Typo="Typo.h4" Class="font-weight-bold">@summaryData.TotalCategories.ToString("N0")</MudText>
                }
                else
                {
                    <MudText Color="Color.Error" Typo="Typo.caption">Failed to load</MudText>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Active Offers Card -->
    <MudItem xs="12" sm="6" lg="3">
        <MudCard Elevation="2" Class="stat-card">
            <MudCardContent Class="pa-4">
                <div class="d-flex justify-space-between align-center mb-2">
                    <MudIcon Icon="@Icons.Material.Filled.LocalOffer"
                             Size="Size.Large"
                             Color="Color.Success" />
                    @if (!isLoading && summaryData != null)
                    {
                        <MudChip Size="Size.Small" Color="Color.Warning">Live</MudChip>
                    }
                </div>
                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-1">Active Offers</MudText>
                @if (isLoading)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Text" Width="60%" Height="40px" />
                }
                else if (summaryData != null)
                {
                    <MudText Typo="Typo.h4" Class="font-weight-bold">@summaryData.TotalActiveOffers.ToString("N0")</MudText>
                }
                else
                {
                    <MudText Color="Color.Error" Typo="Typo.caption">Failed to load</MudText>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<!-- Charts Grid -->
<MudGrid Spacing="3">
    <!-- Product Distribution Pie Chart -->
    <MudItem xs="12" md="6">
        <MudCard Elevation="2" Class="chart-card">
            <MudCardHeader>
                <CardHeaderContent>
                    <div class="d-flex align-center">
                        <MudIcon Icon="@Icons.Material.Filled.PieChart" Class="mr-2" Color="Color.Primary" />
                        <MudText Typo="Typo.h6">Product Distribution by Category</MudText>
                    </div>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                @if (isLoading)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="300px" />
                }
                else
                {
                    <MudChart ChartType="ChartType.Pie"
                              InputData="@pieChartData"
                              InputLabels="@pieChartLabels"
                              Width="100%"
                              Height="300px"
                              LegendPosition="Position.Bottom" />
                }
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Monthly Products Line Chart -->
    <MudItem xs="12" md="6">
        <MudCard Elevation="2" Class="chart-card">
            <MudCardHeader>
                <CardHeaderContent>
                    <div class="d-flex align-center">
                        <MudIcon Icon="@Icons.Material.Filled.ShowChart" Class="mr-2" Color="Color.Success" />
                        <MudText Typo="Typo.h6">New Products Added Monthly</MudText>
                    </div>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                @if (isLoading)
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="300px" />
                }
                else
                {
                    <MudChart ChartType="ChartType.Line"
                              ChartSeries="@lineChartSeries"
                              XAxisLabels="@lineChartXLabels"
                              Width="100%"
                              Height="300px" />
                }
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<style>
    .stat-card {
        border-radius: 12px;
        transition: all 0.3s ease;
        height: 100%;
    }

        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12) !important;
        }

    .chart-card {
        border-radius: 12px;
        height: 100%;
    }

    @@media (max-width: 599px) {
        .stat-card {
            margin-bottom: 0.75rem;
        }
    }
</style>

@code {
    private bool isLoading = true;
    private string _userName = "User";
    private DashboardSummaryDto? summaryData;

    // Chart data
    private double[] pieChartData = { 25, 15, 30, 10, 20 };
    private string[] pieChartLabels = { "Groceries", "Fruits", "Pharmacy", "Bakery", "Dairy" };
    private List<ChartSeries> lineChartSeries = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "New Products", Data = new double[] { 10, 15, 12, 18, 20, 25 } }
    };
    private string[] lineChartXLabels = { "May", "June", "July", "Aug", "Sept", "Oct" };

    protected override void OnInitialized()
    {
        TokenManager.OnUserNameChanged += async () =>
        {
            _userName = await TokenManager.GetUserNameAsync() ?? "User";
            await InvokeAsync(StateHasChanged);
        };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        try
        {
            isLoading = true;
            var apiResponse = await ApiService.GetAsync<ApiResponse<DashboardSummaryDto>>("/api/Dashboard/summary");
            summaryData = apiResponse?.Data;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading dashboard data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }


    public class DashboardSummaryDto
    {
        [JsonPropertyName("totalUsers")] public int TotalUsers { get; set; }
        [JsonPropertyName("totalProducts")] public int TotalProducts { get; set; }
        [JsonPropertyName("totalCategories")] public int TotalCategories { get; set; }
        [JsonPropertyName("totalActiveOffers")] public int TotalActiveOffers { get; set; }
    }
    public class ApiResponse<T>
    {
        public string Status { get; set; } = string.Empty;
        public T Data { get; set; } = default!;
    }

}