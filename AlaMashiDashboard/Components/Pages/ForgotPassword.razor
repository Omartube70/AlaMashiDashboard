@page "/ForgotPassword"
@inject ApiService ApiService
@inject NavigationManager NavManager
@using MudBlazor

<PageTitle>Forgot Password</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraSmall" Class="mt-16">

    <div class="login-header">
        <h1 class="login-title">🔑 Forgot Password</h1>
        <p class="login-subtitle">Enter your email to reset your password.</p>
    </div>

    <MudCard Elevation="3" Class="login-card">
        <MudCardContent>
            <MudForm @ref="_form">
                <MudTextField @bind-Value="_email"
                              Label="Email Address"
                              Variant="Variant.Outlined"
                              FullWidth="true"
                              Immediate="true"
                              Required="true"
                              RequiredError="Email is required"
                              Validation="@(InputValidator.ValidateEmail)"
                              Class="mb-3" />

                @if (!string.IsNullOrEmpty(_message))
                {
                    <MudText Color="@_messageColor" Class="mt-2">@_message</MudText>
                }
            </MudForm>
        </MudCardContent>

        <MudCardActions Class="justify-start gap-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleSend" Class="px-6">
                Send Email
            </MudButton>

            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="@(() => NavManager.NavigateTo("/"))" Class="px-6">
                Back to Home
            </MudButton>
        </MudCardActions>

    </MudCard>
</MudContainer>

<style>
    .login-header {
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .login-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: #2563eb;
        margin-bottom: 0.25rem;
    }

    .login-subtitle {
        font-size: 0.95rem;
        color: #6b7280;
    }

    .login-card {
        border-radius: 10px;
        padding: 1.5rem;
        background-color: #ffffff;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
    }

    ::deep .mud-input-root {
        border-radius: 6px;
    }

    ::deep .mud-button {
        border-radius: 6px;
        font-weight: 600;
    }

        ::deep .mud-button:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 10px rgba(37, 99, 235, 0.3);
        }
</style>

@code {
    private string _email = "";
    private string _message = "";
    private Color _messageColor = Color.Error;
    private MudForm? _form;

    private async Task HandleSend()
    {
        _message = "";
        if (_form == null) return;

        await _form.Validate();
        if (!_form.IsValid) return;

        bool success = await ApiService.ForgotPasswordAsync(_email);

        if (success)
        {
            _message = "Email sent! Check your inbox to reset password.";
            _messageColor = Color.Success;
            // Redirect to reset page after 2 seconds (optional)
            await InvokeAsync(StateHasChanged); // ⬅️ تحديث فورًا


            await Task.Delay(2000);
            NavManager.NavigateTo($"/ResetPassword?email={_email}");
        }
        else
        {
            _message = "Failed to send email. Please try again.";
            _messageColor = Color.Error;

            await InvokeAsync(StateHasChanged); // ⬅️ تحديث فورًا
        }
    }
}
